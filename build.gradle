buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath "io.spring.nohttp:nohttp-gradle:0.0.4.RELEASE"
        classpath "com.github.jengelman.gradle.plugins:shadow:5.1.0"
    }
}

plugins {
    id 'com.github.hierynomus.license' version '0.15.0' apply false
}

repositories {
    mavenCentral()
}

version project.projectVersion

subprojects { Project subproject ->
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }

    if (subproject.name.contains('example') || subproject.name.startsWith('benchmark')) {
        return
    }

    version project.projectVersion
    group "io.micronaut.starter"
    ext {
        isBuildSnapshot = version.toString().endsWith("-SNAPSHOT")
    }

    apply plugin:"groovy"
    apply plugin:"java-library"
    apply plugin: 'idea'
    apply plugin: 'checkstyle'
    apply from: rootProject.file('gradle/license.gradle')

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    apply from:"https://raw.githubusercontent.com/micronaut-projects/micronaut-build/v${micronautBuildVersion}/publishing.gradle"


    jar {
        manifest {
            attributes('Automatic-Module-Name': "${subproject.group}.${subproject.name}".replaceAll('[^\\w\\.\\$_]', "_"))
            attributes('Implementation-Version': projectVersion)
            attributes('Implementation-Title': title)
        }
    }

    bintray.publish = true

    tasks.withType(Test) {
        useJUnitPlatform()
        jvmArgs '-Duser.country=US'
        jvmArgs '-Duser.language=en'
        testLogging {
            exceptionFormat = 'full'
        }
        afterSuite {
            System.out.print(".")
            System.out.flush()
        }

        reports.html.enabled = !System.getenv("TRAVIS")
        reports.junitXml.enabled = !System.getenv("TRAVIS")
    }

    dependencies {
        annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
        api platform("io.micronaut:micronaut-bom:$micronautVersion")
        implementation platform("io.micronaut:micronaut-bom:$micronautVersion")

        annotationProcessor "io.micronaut:micronaut-inject-java"
        api "io.micronaut:micronaut-inject"

        testAnnotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"
        testImplementation("org.codehaus.groovy:groovy-test:$groovyVersion")
        testImplementation("org.spockframework:spock-core:$spockVersion") {
            exclude group: "org.codehaus.groovy", module: "groovy-all"
        }

        testAnnotationProcessor "io.micronaut:micronaut-inject-java"
        testImplementation "io.micronaut:micronaut-inject-groovy:$micronautVersion"

        testImplementation "cglib:cglib-nodep:3.3.0"
        testImplementation "org.objenesis:objenesis:3.1"

        testRuntimeOnly "ch.qos.logback:logback-classic:1.2.3"
    }

    task allDeps(type: DependencyReportTask) {}

    checkstyle {
        toolVersion = 8.16
        configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")

        // Per submodule
        maxErrors = 1
        maxWarnings = 10

        showViolations = true
    }
    checkstyleTest.enabled = false

    idea {
        module {
            outputDir file('build/classes/java/main')
            testOutputDir file('build/classes/groovy/test')
        }
    }

    tasks.withType(JavaCompile){
        options.encoding = "UTF-8"
        options.compilerArgs.add('-parameters')
    }

    tasks.withType(com.hierynomus.gradle.license.tasks.LicenseFormat) {
        check = true
        include "**/*.java"
    }
}





