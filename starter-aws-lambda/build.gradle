import com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer
plugins {
    id "com.github.johnrengelman.shadow"
    id "application"
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    implementation project(":starter-api")
    implementation "io.micronaut:micronaut-inject"

    implementation("io.micronaut.aws:micronaut-function-aws-api-proxy") {
        exclude group: "org.apache.httpcomponents"
        exclude group: "org.slf4j"
    }
    runtimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:2.12.1"
    runtimeOnly "com.amazonaws:aws-lambda-java-log4j2:1.1.0"

    testCompileOnly "io.micronaut:micronaut-inject-groovy"
    testImplementation "io.micronaut.test:micronaut-test-spock"
}
test.classpath += configurations.developmentOnly

mainClassName = "io.micronaut.gcp.function.http.HttpFunction"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}

shadowJar {
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': 'io.micronaut.gcp.function.http.HttpFunction'
    }
    transform(Log4j2PluginsCacheFileTransformer)
}

run.classpath += configurations.developmentOnly

task exploded(type: Copy) {
    from sourceSets.main.output
    into "build/exploded"


    into('lib') {
        from configurations.compileClasspath
        from configurations.runtimeClasspath
    }
}

shadowJar.dependsOn exploded